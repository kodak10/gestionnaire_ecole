<?php

namespace App\Http\Controllers;

use App\Models\MoisScolaire;
use App\Models\Niveau;
use App\Models\Tarif;
use App\Models\TarifMensuel;
use App\Models\TypeFrais;
use Illuminate\Http\Request;

class TarifMensuelController extends Controller
{
    public function index(Request $request)
    {
        // Filtres
        $niveau_id = $request->input('niveau_id');
        $type_frais_id = $request->input('type_frais_id');
        $mois_id = $request->input('mois_id');

        $niveaux = Niveau::orderBy('nom')->get();
        $typeFrais = Tarif::orderBy('nom')->get();
        $moisScolaires = MoisScolaire::orderBy('numero')->get();

        // Requête filtrée
        $query = TarifMensuel::with(['typeFrais', 'niveau', 'mois']);

        if ($niveau_id) $query->where('niveau_id', $niveau_id);
        if ($type_frais_id) $query->where('type_frais_id', $type_frais_id);
        if ($mois_id) $query->where('mois_id', $mois_id);

        $tarifs = $query->get();

        // Préparer les événements pour FullCalendar
        $events = [];
        foreach ($tarifs as $tarif) {
            $startDate = date('Y') . '-' . str_pad($tarif->mois->numero, 2, '0', STR_PAD_LEFT) . '-01';

            $events[] = [
                'id' => $tarif->id,
                'title' => $tarif->typeFrais->nom . ' : ' . number_format($tarif->montant, 0, ',', ' ') . ' FCFA',
                'start' => $startDate,
                'allDay' => true,
                'className' => $this->getCssClassForTypeFrais($tarif->type_frais_id),
                'extendedProps' => [
                    'niveau' => $tarif->niveau->nom,
                    'niveau_id' => $tarif->niveau->id,
                    'mois' => $tarif->mois->nom,
                    'mois_id' => $tarif->mois->id,
                    'type_frais_id' => $tarif->type_frais_id,
                    'montant' => $tarif->montant,
                ],
                'url' => route('tarifs-mensuels.edit', $tarif->id)
            ];
        }

        return view('dashboard.pages.parametrage.scolarite.tarifs_calendar', [
            'niveaux' => $niveaux,
            'typeFrais' => $typeFrais,
            'moisScolaires' => $moisScolaires,
            'events' => $events,
            'filters' => compact('niveau_id', 'type_frais_id', 'mois_id'),
            'selectedTarif' => $request->has('edit') ? TarifMensuel::find($request->edit) : null
        ]);
    }

    private function getCssClassForTypeFrais(int $typeFraisId): string
    {
        $classes = [
            1 => 'fc-event-inscription',
            2 => 'fc-event-scolarite',
            3 => 'fc-event-cantine',
            4 => 'fc-event-transport',
        ];
        return $classes[$typeFraisId] ?? 'fc-event-default';
    }

    public function store(Request $request)
    {
        $validated = $request->validate([
            'type_frais_id' => 'required|exists:type_frais,id',
            'niveau_id' => 'required|exists:niveaux,id',
            'mois_id' => 'required|exists:mois_scolaires,id',
            'montant' => 'required|numeric|min:0',
        ]);

        // Vérification des contraintes métier...
        
        TarifMensuel::create($validated);

        return redirect()->route('tarifs-mensuels.index')->with('success', 'Tarif mensuel ajouté.');
    }

    public function edit($id)
    {
        return redirect()->route('tarifs-mensuels.index', ['edit' => $id]);
    }

    public function update(Request $request, $id)
    {
        $tarif = TarifMensuel::findOrFail($id);

        $validated = $request->validate([
            'type_frais_id' => 'required|exists:type_frais,id',
            'niveau_id' => 'required|exists:niveaux,id',
            'mois_id' => 'required|exists:mois_scolaires,id',
            'montant' => 'required|numeric|min:0',
        ]);

        // Vérification des contraintes métier...

        $tarif->update($validated);

        return redirect()->route('tarifs-mensuels.index')->with('success', 'Tarif mis à jour.');
    }

    public function destroy($id)
    {
        $tarif = TarifMensuel::findOrFail($id);
        $tarif->delete();

        return redirect()->route('tarifs-mensuels.index')->with('success', 'Tarif supprimé.');
    }
}
